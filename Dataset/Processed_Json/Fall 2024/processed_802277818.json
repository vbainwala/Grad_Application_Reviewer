{
    "ID": "802277818",
    "SOP": "Junru Zhou Having studied Computer Engineering, I have received some of the most rigorous training at the University of California, Santa Cruz, and the University of California, Irvine. The strong curriculum with courses focusing on algorithms, programming languages, software engineering, and computer systems, has laid for me a solid foundation in adopting system-level perspective and problem-solving skills for both real-life and simulated scenarios. But the real education occurred when I took this knowledge and applied it to a variety of projects. In these hands-on contexts, I honed my mastery of programming languages such as Java, Python, C, and C++, and tools such as Git, TensorFlow, and Firebase, among others. For example, I developed a proxy server that would manage HTTP requests from clients through seamless conversion into HTTPS requests and implemented an access control list-based request filtering system to optimize network performance. With my hard work and continuing education, I have received the Dean\u2019s Honor and have accomplished a GPA of 3.31 out of 4, and I finished my undergraduate degree in four years. During my graduate study, I extended my knowledge based on what I learned during my undergrad to areas such as Computer Vision, Machine Learning, and Network Science. I have accomplished a GPA of 3.40 out of 4. This academic experience, I believe, is strong proof of my qualifications to become a worthy candidate for your program. During my undergraduate studies at the University of California, Santa Cruz, I encountered a significant academic obstacle related to the C programming language. The sudden global pandemic necessitated a shift to online learning, which presented Junru Zhou unique challenges for mastering the intricacies of C, a critical subject in my Computer Engineering program. Unlike traditional in-person classes, C programming demanded a deep understanding of syntax, data structures, and low-level memory management. Unfortunately, the online environment made it difficult for me to grasp these fundamental concepts effectively. I recognized that adapting to online learning required a different set of skills and strategies. So, I decided to take a proactive approach to address this challenge. In July 2021, I took the initiative to apply for a teaching assistant (TA) position for C Programming and Data Structures, both of which I had excelled in previously. As a TA, I was responsible for conducting weekly discussion sessions, answering students' questions, and reviewing key course materials related to C programming. To fulfill my role effectively, I adopted a rigorous approach to my learning. I revisited the course materials, collected various examples, and sought clarification from professors on topics I had previously found challenging. This thorough preparation enabled me to explain complex concepts to students clearly and concisely. This hands-on experience improved my own C programming skills and made me more aware of potential pitfalls in my coding practices. Beyond technical skills, my role as a TA also honed my communication, leadership, and presentation abilities. In my role as a research assistant in Professor Qian Chen's lab at UCSC, I collaborated on a Computer Vision project, \"Identity Tracking with Little Training,\" focusing on person tracking using Convolutional Neural Networks and Vision-RF Fusion. Initially challenged by my limited knowledge in Machine Learning, I proactively enhanced my Junru Zhou skills through an Applied Machine Learning class, mastering tools like TensorFlow, pandas frame, and NumPy. My responsibilities ranged from data collection and preprocessing to troubleshooting hardware issues, notably with an Xbox camera. I contributed to model refinement by identifying and correcting data inaccuracies, leading to improved model accuracy and noise reduction. This experience not only deepened my understanding of Computer Vision and its practical applications but also sharpened my programming skills and problem-solving abilities, fueling my passion for further exploration in this field as I pursue doctoral studies. Engaged in the development of the Long Marine Lab Stranding Map project, I played a significant role in bringing this geospatial data visualization initiative to life. Leading a team of four developers, I adopted Scrum methodologies, ensuring efficient collaboration and on-time project delivery. Our objective was to create a comprehensive database visualization map to track cases of stranded marine life. On the front end, I worked extensively with JavaScript and React to design user-friendly layouts. Leveraging the power of Mapbox GL, we incorporated robust mapping functionalities into our project, ensuring that users could interact with the data effectively. Meanwhile, on the backend, we harnessed the capabilities of Node.js to manage data efficiently. Our database management was a critical aspect of the project's success. To this end, we made use of Firebase and Algolia for indexing and retrieval, ensuring that users could access information swiftly and accurately. Throughout the development process, I collaborated with my teammates, conducting peer code reviews to identify and address Junru Zhou bugs while also optimizing our database management strategies. Efficient task management was vital to project's progress, and we achieved this using Jira. Moreover, for seamless code collaboration and version control, we relied on GitHub, enabling our team to keep track of code changes effectively. Our collaborative efforts and dedication to the project paid off, resulting in a powerful tool for tracking stranded marine life cases. As we move forward, we remain focused on enhancing the project by adding new features to meet the evolving needs of our users. This experience enhanced my ability to work in a team and manage tasks effectively. After careful consideration, I find the Ph.D. program in Computer Science at Columbia University aligns seamlessly with my academic background, research interests, and professional aspirations. Columbia\u2019s collaborative ethos and its integration within a broader academic and professional network present an ideal setting for interdisciplinary research and innovation. It presents the ideal environment for me to grow as a researcher and innovator, contributing to the field of computer science while also gaining invaluable knowledge and experience. I am eager to embark on this next phase of my academic journey and contribute to the dynamic research community at Columbia. In the long term, I want to develop myself to become a good engineer, delivering interesting and useful ideas or products for society. Junru Zhou Having studied Computer Engineering, I have received some of the most rigorous training at the University of California, Santa Cruz, and the University of California, Irvine. The strong curriculum with courses focusing on algorithms, programming languages, software engineering, and computer systems, has laid for me a solid foundation in adopting system-level perspective and problem-solving skills for both real-life and simulated scenarios. But the real education occurred when I took this knowledge and applied it to a variety of projects. In these hands-on contexts, I honed my mastery of programming languages such as Java, Python, C, and C++, and tools such as Git, TensorFlow, and Firebase, among others. For example, I developed a proxy server that would manage HTTP requests from clients through seamless conversion into HTTPS requests and implemented an access control list-based request filtering system to optimize network performance. With my hard work and continuing education, I have received the Dean\u2019s Honor and have accomplished a GPA of 3.31 out of 4, and I finished my undergraduate degree in four years. During my graduate study, I extended my knowledge based on what I learned during my undergrad to areas such as Computer Vision, Machine Learning, and Network Science. I have accomplished a GPA of 3.40 out of 4, and I finished my undergraduate degree in four years. This academic experience, I believe, is strong proof of my qualifications to become a worthy candidate for your program. During my undergraduate studies at the University of California, Santa Cruz, I encountered a significant academic obstacle related to the C programming language. Junru Zhou The sudden global pandemic necessitated a shift to online learning, which presented unique challenges for mastering the intricacies of C, a critical subject in my Computer Engineering program. Unlike traditional in-person classes, C programming demanded a deep understanding of syntax, data structures, and low-level memory management. Unfortunately, the online environment made it difficult for me to grasp these fundamental concepts effectively. Instead of succumbing to the difficulties, I decided to take a proactive approach to address this challenge. I recognized that adapting to online learning required a different set of skills and strategies. In July 2021, I took the initiative to apply for a teaching assistant (TA) position for C Programming and Data Structures, both of which I had excelled in previously. This decision marked a turning point in my academic journey. As a TA, I was responsible for conducting weekly discussion sessions, answering students' questions, and reviewing key course materials related to C programming. To fulfill my role effectively, I adopted a rigorous approach to my learning. I revisited the course materials, collected various examples, and sought clarification from professors on topics I had previously found challenging. This thorough preparation enabled me to explain complex concepts related to C programming to students clearly and concisely. Furthermore, assisting students with debugging and troubleshooting their C code allowed me to gain a deeper understanding of common programming errors and their solutions. This hands-on experience improved my own C programming skills and made me more aware of potential pitfalls in my coding practices. Beyond technical skills, my role as a TA also honed my communication, leadership, and presentation abilities. Junru Zhou Engaged in the development of the Long Marine Lab Stranding Map project, I played a significant role in bringing this geospatial data visualization initiative to life. Leading a team of four developers, I adopted Scrum methodologies, ensuring efficient collaboration and on-time project delivery. Our objective was to create a comprehensive database visualization map to track cases of stranded marine life. To achieve this, our team seamlessly integrated various technologies and skill sets. On the front end, I worked extensively with JavaScript and React to design user-friendly layouts. Leveraging the power of Mapbox GL, we incorporated robust mapping functionalities into our project, ensuring that users could interact with the data effectively. Meanwhile, on the backend, we harnessed the capabilities of Node.js to manage data efficiently. Our database management was a critical aspect of the project's success. To this end, we made use of Firebase and Algolia for indexing and retrieval, ensuring that users could access information swiftly and accurately. Throughout the development process, I collaborated closely with my teammates, conducting peer code reviews to identify and address bugs while also optimizing our database management strategies. Efficient task management was vital to our project's progress, and we achieved this using Jira. Moreover, for seamless code collaboration and version control, we relied on GitHub, enabling our team to work cohesively and keep track of code changes effectively. Our collaborative efforts and dedication to the project paid off, resulting in a powerful tool for tracking stranded marine life cases. This project not only showcased our technical abilities but also highlighted our commitment to addressing real-world challenges in Junru Zhou marine conservation. As we move forward, we remain focused on enhancing the project by adding new features to meet the evolving needs of our users, especially as online coursework for the upcoming quarter presents new opportunities and demands. This experience enhanced my ability to work in a team and manage tasks effectively. After careful consideration, I find the Ph.D. program in Computer Science at Columbia University aligns seamlessly with my academic background, research interests, and professional aspirations. Columbia\u2019s collaborative ethos and its integration within a broader academic and professional network present an ideal setting for interdisciplinary research and innovation. It presents the ideal environment for me to grow as a researcher and innovator, contributing to the field of computer science while also gaining invaluable knowledge and experience. I am eager to embark on this next phase of my academic journey and contribute to the dynamic research community at Columbia. In the long term, I want to develop myself to become a good engineer, delivering interesting and useful ideas or products for society.",
    "Resume": "JUNRU (JACK) ZHOU (831)-400-7889 \u22c4 Irvine, CA 92614 \u22c4 junruz6@uci.edu \u22c4 https://www.linkedin.com/in/junru-zhou/ EDUCATION University of California, Irvine Irvine, CA M.S. in Computer Engineering, GPA: 3.40/4.00 Sept. 2022 - Present University of California, Santa Cruz Santa Cruz, CA B.S. in Computer Engineering, Minor in Computer Science, GPA: 3.31/4.00 Sept. 2019 - Jun. 2022 SKILLS Programming languages Python, Java, C, C++, C#, SQL, HTML, JavaScript, CSS, SystemC, MIPS ASM, Verilog Technical Tools Linux, Git, NodeJS, React, Jupyter, PyTorch, TensorFlow, Scikit-learn, Pandas, Bash, WebGL Software VS Code, CCStudio, Bitvise SSH, FileZilla, MATLAB, Wireshark, QEMU, VirtualBox, LaTex EXPERIENCE Winservo Electrical Technology Co., Ltd. Xiamen, Fujian, China Embedded Software Development Engineer Intern Jun. 2023 - Sept. 2023 \u2022 Implemented advanced PID control algorithms to enhance servo motor tension control, replacing outdated linear algorithms \u2022 Utilized CSStudio for debugging, and optimizing the existing codebase, resulting in improved performance and reliability \u2022 Collaborated with electrical and mechanical engineers to adjust the control algorithm, ensuring the change fit with the system \u2022 Improved the real-time response of the servo motors, resulting in increased production efficiency and product quality \u2022 Documented the development process and provided reports to assist in knowledge transfer within the development group CE Grow Force Technology Co., Ltd. Remote Software Development Engineer Intern Jul. 2022 - Sept. 2022 \u2022 Designed a new platform facilitating documents and installation packages, aimed to improve user resource accessibility \u2022 Implemented data uploading strategies by integrating the Alibaba cloud storage solution to guarantee easy access to resources \u2022 Applied elastic search algorithms to allow users to search through the database for desired documentations and packages \u2022 Developed user-friendly download pages in HTML and JavaScript offering in-depth information on downloadable content \u2022 Enhanced page layout by incorporated a navigation bar to provide file type categorization with version selection tables University of California, Santa Cruz Santa Cruz, CA Undergraduate Student Researcher Jul. 2021 - Jan. 2022 \u2022 Developed a Vision-RFID fusion system to achieve real-time identification of individuals\u2019 physical IDs within the camera field of view, and implemented a tracking algorithms to monitor targets and capture their movement patterns in video frames \u2022 Implemented a C# program with Low-level Reader Protocol and Kinect to deploy RFID reader and data collection system \u2022 Created a Python-based RNN model using a LSTM network for binary time series classification to process physical data \u2022 UtilizedPyTorchtotrainandassessadeeplearningmodelwiththeSiameseOSNetforaccuratepersondetectionandtracking \u2022 Performed data collection and analysis to validate the RFID tag detection and movement tracking capabilities of the model PROJECTS Long Marine Lab Stranding Map \u2022 Collaborated in the implementation of a database visualization map project for geospatial data on stranded marine life cases \u2022 Developed front-end layouts using JavaScript with React, leveraging Mapbox GL for mapping functionalities, and utilized Node.js on the backend for efficient data management and utilized Firebase and Algolia for database indexing and retrieval \u2022 Contributed to the existing codebase by resolving bugs and optimizing database management through peer code review \u2022 CollaboratedwithteammembersbyJiraforefficienttaskmanagementandGitHubforcodecollaborationandversioncontrol The BreakAlert \u2022 Developed a productivity-enhancing Google Chrome extension to empower users through a range of useful add-on tools \u2022 Utilized HTML and JavaScript skills to architect fully functional extension pages that integrated a scheduler, calendar GUI, tab shortcut, to-do list, alarm, and website blocker, fostering heightened productivity and concentration \u2022 Crafted a HTML landing page that showcased the extension\u2019s capabilities, and introducing users to its features and benefits \u2022 Led a team of four developers to adopt Scrum methodologies, facilitating efficient collaboration and on-time project delivery First-Person 3D World Exploration \u2022 Developed a 3D scene application using Three.js, incorporating several 3D primary shapes, including cubes, spheres, and cylinders, with one textured and animated 3D object to create a visually engaging and dynamic world on website \u2022 Implemented light sources including Ambient Light, Directional Light, and Point Light, to enhance the visual appeal \u2022 Integrated a textured skybox using a cubemap, creating a captivating background that enhances the immersive experience \u2022 Configured the camera with incorporated Orbit Controls to allow users to navigate the scene with mouse interactions \u2022 Incorporatedadvancedfeatures,includingFogforheighteneddepthperception,RendertoTexturefordynamicrendering,and Shadows for enhanced realism and visual impact, successfully achieving an elevated level of visual effect Bitcoin Price Prediction \u2022 Developed an autoregressive RNN model for Bitcoin price prediction using Python by utilized historical Bitcoin price data \u2022 Imported the data using Pandas and processed it with Numpy to a chronological distribution training and test sets \u2022 Explored and tested data using various RNN architectures, including LSTM and GRU, both unidirectional and bidirectional \u2022 Evaluated models using MSE to plotted training, validation loss, and select the best-performing model based on evaluation \u2022 Tuned model for accurate predictions and illustrated results by comparing predicted prices to actual prices through plots Gesture Recognition and Classification \u2022 Built a custom CNN model for recognizing ASL hand gestures images corresponding to the English alphabet \u2022 Resized and preprocessed images to 200x200 pixels, adjusted pixel values, and meticulously categorized target classes \u2022 Adjusted the convolutional and dense layers, ReLU activation, batch normalization, and dropout to mitigate overfitting \u2022 Trained the model using Categorical Cross-Entropy loss, Adam optimizer, and implemented learning rate schedules \u2022 Performed hyperparameter tuning with a primary focus on optimizing learning rate, architecture depth, and dropout rate, followed by model selection based on validation performance and subsequent test accuracy computation Visualization Comparance of GAE and DANMF \u2022 VisualizedthecommunitydetectioninnetworksandcreatedrunnableprojectstoenhanceunderstandingofGAEandDANMF \u2022 UsedPythontoreadandprocessdatasetslikeCiteSeer,Cora,andPubMedtovalidateandtransformthemformodelutilization \u2022 Utilized TensorFlow to implement GAE models and Scikit-learn to implement DANMF models, extensively experimenting with various encoder sizes and layer configurations to evaluate the model structure on performance across multiple datasets \u2022 Generatedmultipletablestoassessmodelrobustnessbyintroducingnoisetothedataandanalyzethedifferenceofperformance \u2022 Re-implementedtheoriginalPythoncodesonJupyterfortheplatform,enhancedfunctionalitythroughmodificationstopackage sources, dataset sources, and relevant codes, resulting in a streamlined user experience with one-click execution capability C2S Proxy Server \u2022 Designed a proxy server, enhancing its functionality to manage HTTP requests from clients through seamless conversion into HTTPS requests and implemented an access control list-based request filtering system to optimize network performance \u2022 Implementedinputvalidationfortheportnumberandconfigurationfilepaths,enhancingtheserver\u2019srobustnessandreliability \u2022 Set up and managed multiple threads to handle concurrent client connections, ensuring efficient operation and responsiveness \u2022 Designed a resilient signal handler for command handling and site list updates, while also developing a secure data retrieval and transmission function using SSL encryption for client-server communication to ensure data integrity \u2022 Created error handling functions to provide error messages in response to unexpected issues, improving user experience Thread Scheduling and Priority Management \u2022 Implemented a priority-based ready queue system for thread scheduling and prioritization in a multi-threaded environment \u2022 Developed a priority donation mechanism to effectively address situations in which high-priority threads required access to resources held by lower-priority threads, ensuring seamless priority transfers and the prevention of resource contention issues \u2022 Designed and integrated advanced priority management functionalities, encompassing multi-tier, nested, and linked priority contributions, ensuring meticulous documentation of donation data to optimize thread scheduling efficiency \u2022 Enhanced thread system responsiveness and efficiency by prioritizing high-priority threads for improved task execution System Calls and Process Management \u2022 Designed and implemented a comprehensive system call handler, featuring an array of essential functions for system calls, including create, open, read, filesize, wait, close, and exec, aimed at improving the system\u2019s overall functionality and efficiency \u2022 Developedarobuststackmanagementsystemtointelligentlyparseruntimeparametersandefficientlystorethem,guaranteeing precise handling of critical base addresses, string lengths, word alignment, and various other essential parameters \u2022 Developed a stack-based approach to manage the storage of parameters in order to ensure the execution of system calls \u2022 Resolved potential parent-child process order issues by implementing a thread-sync mechanism, preventing test case failures \u2022 Implementeddatastructuresandlistsforthesystemtotrackfileopenings,managefiledescriptors,andsupportfileoperations Canny Edge Detector \u2022 Developed an efficient SLDL model with a focus on utilizing the Canny Edge Detector, SystemC compiler integration, and precise parameter management, while assessing the computational load for DUT components as a percentage of the total load \u2022 Used the gprof tool for SystemC to identify the computational complexity and calculate the relative loads of components \u2022 Implemented fixed-point arithmetic optimizations for a specific component, converting floating-point variables to integers and adjusting timing based on the trade-off between execution speed and image quality assessed with ImageDiff tool \u2022 Conducted performance testing on Raspberry Pi 3 and 4 to find the improvement and adjusted model timing accordingly LANGUAGES Chinese - Native, English - Proficient, Japanese - Basic"
}